<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.FileProviders.Embedded</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.FileProviders.CompositeDisposable">
            <summary>
            Represents a composition of <see cref="T:System.IDisposable"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.CompositeDisposable.#ctor(System.Collections.Generic.IList{System.IDisposable})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.FileProviders.CompositeDisposable"/>.
            </summary>
            <param name="disposables">The list of <see cref="T:System.IDisposable"/> to compose.</param>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.CompositeFileChangeToken">
            <summary>
            Represents a composition of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.CompositeFileChangeToken.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.FileProviders.CompositeFileChangeToken"/>.
            </summary>
            <param name="changeTokens">The list of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> to compose.</param>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider">
            <summary>
            Looks up files using embedded resources in the specified assembly.
            This file provider is case sensitive.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider" /> class using the specified
            assembly and empty base namespace.
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider" /> class using the specified
            assembly and base namespace.
            </summary>
            <param name="assembly">The assembly that contains the embedded resources.</param>
            <param name="baseNamespace">The base namespace that contains the embedded resources.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)">
            <summary>
            Locates a file at the given path.
            </summary>
            <param name="subpath">The path that identifies the file. </param>
            <returns>The file information. Caller must check Exists property.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)">
            <summary>
            Enumerate a directory at the given path, if any.
            This file provider uses a flat directory structure. Everything under the base namespace is considered to be one directory.
            </summary>
            <param name="subpath">The path that identifies the directory</param>
            <returns>Contents of the directory. Caller must check Exists property.</returns>
        </member>
    </members>
</doc>
